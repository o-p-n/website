version: "3"

vars:
  DOCKER_CONTEXT: '{{ default "default" .DOCKER_CONTEXT }}'
  DOCKER_METADATA: '{{ default "target/metadata.json" .DOCKER_METADATA }}'
  IMAGE_REPOSITORY: o-p-n/website
  IMAGE_TAG: '{{ default "latest" .IMAGE_TAG }}'
  SOURCE_EPOCH: "0"
  SOURCE_DATE:
    sh: date -u -d @{{ .SOURCE_EPOCH }} +"%Y-%m-%dT%H:%M:%S" 2> /dev/null || date -u -r {{ .SOURCE_EPOCH }} +"%Y-%m-%dT%H:%M:%S"

includes:
  docker:
    taskfile: ./.builder/docker/taskfile.yaml

tasks:
  default: task --list

  clean.site:
    cmds:
      - git clean -dfx _site
  clean.image:
    cmds:
      - git clean -dfx target
  clean:
    desc: Cleans the outputs
    deps:
      - clean.site
      - clean.image

  build:
    desc: Builds the website
    vars:
      SOURCE_DATE: '{{ .SOURCE_DATE }}'
    sources:
      - src/**
      - _config.ts
      - deno.json
      - deno.lock
    cmds:
      - task: clean.site
      - deno task build

  image:
    desc: Assembles the 'website' container image
    deps:
      - build
    sources:
      - _site/**
      - Dockerfile
    vars:
      IMAGE_TAG: '{{ .IMAGE_TAG }}'
      IMAGE_REPOSITORY: '{{ .IMAGE_REPOSITORY }}'
    cmds:
      - task: docker:image
        vars:
          IMAGE_REPOSITORY: '{{.IMAGE_REPOSITORY}}'
          IMAGE_TAG: '{{.IMAGE_TAG}}'

  kustomize.env:
    vars:
      ENV: '{{ .ENV }}'
      K8S_REGISTRY: '{{.K8S_REGISTRY}}'
      IMAGE_DIGEST:
        sh: cat {{ .DOCKER_METADATA }} | jq -r '."containerimage.digest"'
      IMAGE: '{{ .K8S_REGISTRY }}/{{ .IMAGE_REPOSITORY }}@{{ .IMAGE_DIGEST }}'
    cmds:
      - |
        cat << ---EOF--- > k8s/env/{{ .ENV }}/deployment-image-patch.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: website
          namespace: website
        spec:
          template:
            spec:
              containers:
              - name: website
                image: {{ .IMAGE }}
        ---EOF---
  kustomize.only:
    vars:
      K8S_REGISTRY: '{{ coalesce .K8S_REGISTRY .DOCKER_REGISTRY }}'
    deps:
      - task: kustomize.env
        vars:
          ENV: public
          K8S_REGISTRY: '{{ .K8S_REGISTRY }}'

  kustomize:
    desc: Updates kustomize deployment for built image
    deps:
      - image
    cmds:
      - task: kustomize.only

  deploy.only:
    desc: Deploys kubernetes manifests to {{default "<ENV>" .ENV}} cluster
    env:
      ENV: '{{.ENV}}'
    cmds:
      - o-p-n.deployer apply --env {{.ENV}}

  deploy.local:
    desc: Deploys kubernetes manifests to local cluster
    vars:
      ENV: local
      K8S_REGISTRY: host.minikube.internal:12676
      DOCKER_REGISTRY: localhost:12676
    cmds:
      - task: image
        vars:
          ENV: '{{ .ENV }}'
          DOCKER_REGISTRY: '{{ .DOCKER_REGISTRY }}'
      - task: deploy.only
        vars:
          ENV: '{{ .ENV }}'
